---
format: pdf
execute: 
  echo: false
  warning: false
  message: false
params:
  species: "virginica"
  image_paths: "media/setosa.png"
  descriptions: "Here is a brief description"
bibliography: references.bib
---

```{r}

```


```{r}
#| echo: false

library(tidyverse)
library(ggplot2)

```

## Iris `r {params$species}`

***Iris `r {params$species}`***

![Iris `r {params$species}`](`r {params$image_paths}`)  
`r {params$descriptions}`

Here is a very basic plot showing the relationship of petal length to petal width. Not surprisingly, as the length increases, so too does the width.


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 4
#| fig-height: 3.5

species <- unique(iris$Species) %>% 
  as.character()

color_vector <- rep("darkgray", length(species))  # Default all species to gray
names(color_vector) <- species
color_vector[params$species] <- "blue"  # Set the selected species to blue

# Construct the custom colors vector based on species
custom_colors <- color_vector[iris$Species]

custom_shapes <- c("setosa" = 16,  # Circle
                   "versicolor" = 17,  # Triangle
                   "virginica" = 18)  # Diamond 

plot1 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, shape = Species, color = Species)) +
              xlab("Petal Length") +
              ylab("Petal Width") +
              geom_point() +
              geom_smooth(method = 'lm', se = FALSE, color = "darkgray") +
              scale_color_manual(values = color_vector) +  # Apply custom colors
              scale_shape_manual(values = custom_shapes) +  # Apply custom shapes
              labs(title = str_glue("Comparison of petal width to petal length\nacross three Iris species")) +
              theme(plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
                    legend.title = element_blank(), # Remove legend title for simplicity 
                    legend.position = "top",
                    panel.background = element_rect(fill = "transparent", color = NA),  
                    plot.background = element_rect(fill = "transparent", color = NA),  
                    legend.background = element_rect(fill = "transparent", color = NA) )
              
          
ggsave(plot1, "media/plot1")
```

